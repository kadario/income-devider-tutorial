import { Button, VerticalBox , LineEdit, StandardListView, GroupBox} from "std-widgets.slint";


export component AppWindow inherits Window {
    in property <string> results: "";
    callback devide-income(string);
    in-out property <bool> open_curtain;
    animate background { duration: 800ms; }
    background: #313e50;

    GridLayout {
        padding: 50px;
        spacing: 25px;
        Row {
            Text {
                text: "Enter Total Income";
                horizontal-alignment: center;
                font-size: 24px;
                color: white;
            }
        }

        Row {
            income := LineEdit {
                horizontal-alignment: center;
                font-size: 14px;
                placeholder-text: "Enter text here";
                height: 35px;
            }
        }

        Row {
            Button {
                text: "Calculate";
                primary: true;
                height: 35px;
                clicked => {
                    root.open_curtain = !root.open_curtain;
                    devide-income(income.text)
                }
            }
        }

        Row {
            VerticalBox {
                width: 200px;
                height: 100px;
                Rectangle {
                    background: #f2f2f2;
                    Text {
                        color: black;
                        font-size: 15px;
                        font-weight: 500;
                        text: root.results;
                    }
                }

                // left rectangle
                Rectangle {
                    background: #333333;
                    x: 0px;
                    width: open_curtain ? 0px : parent.width / 2;
                    height: parent.height;
                    animate width {
                        duration: 250ms;
                        easing: ease-in;
                    }
                }

                // right rectangle
                Rectangle {
                    background: #333333;
                    x: open_curtain ? parent.width : (parent.width / 2);
                    width: open_curtain ? 0px : (parent.width / 2);
                    height: parent.height;
                    animate width {
                        duration: 250ms;
                        easing: ease-in;
                    }
                    animate x {
                        duration: 250ms;
                        easing: ease-in;
                    }
                }
            }
        }
    }
}
